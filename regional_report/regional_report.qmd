---
title: "SE US"
format: html
#echo: false
code-fold: true
warning: false
params: 
  project_id: "SE US"
execute: 
  cache: true
---


```{R}
#| code-summary: setup
#| message: false
#| warning: false
if (!requireNamespace("librarian", quietly = TRUE)) {
  # If not installed, install the package
  install.packages("librarian")
}

librarian::shelf(
  dplyr,
  here
)

```

# `r params$project_id` Report
```{R}
#| code-summary: load data
source(here("R/getCleanedData.R"))
data <- getCleanedData() %>%
  filter(mbon.project == params$project_id)
```

```{R}
#| code-summary: show dataset titles
print(data$Dataset.title)
```
```{R}
#| code-summary: sankey diagrams setup
yes_values <- c("yes")
no_values <- c("no", "no (in progress)", "no (latest revision in progress)", "none")

sankey2layer <- function(df, layer1, layer2cols){ 
  for (col in layer2cols){
    df <- df %>%
    mutate(
      col = ifelse(tolower(col) %in% yes_values, col, col),
      col = ifelse(tolower(col) %in% no_values, "", col)
    )
  }
  links <- data.frame()
  for (col in layer2cols){
    links <- rbind(
      links,
      data.frame(
        source = df[[layer1]],
        target = df[[col]],
        value = 1
      )
    )
  }
  links %>%
    filter_all(all_vars(. != "")) # drop anything that is empty
  
  # Create nodes data frame
  nodes <- data.frame(
    name = c(as.character(links$source), as.character(links$target)) %>% unique()
  )
  
  # Reformat the links with IDs
  links$IDsource <- match(links$source, nodes$name) - 1
  links$IDtarget <- match(links$target, nodes$name) - 1
  
  # Make the Network
  p <- networkD3::sankeyNetwork(Links = links, Nodes = nodes,
                     Source = "IDsource", Target = "IDtarget",
                     Value = "value", NodeID = "name",
                     sinksRight = FALSE)
  return(p)
}
```

```{R}
#| code-summary: sankey diagram of data mobilization
sankey2layer(data, "Dataset.title", c("erddap", "obis", "ncei", "web.link"))
```

