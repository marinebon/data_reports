[
  {
    "objectID": "regional_report/regional_report.html",
    "href": "regional_report/regional_report.html",
    "title": "SE US",
    "section": "",
    "text": "setup\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  # If not installed, install the package\n  install.packages(\"librarian\")\n}\n\nlibrarian::shelf(\n  dplyr,\n  here,\n  htmltools,\n  reactablefmtr,\n  tidyverse\n)\n\n\n\nSE US Report\n\n\nload data\nsource(here(\"R/getCleanedData.R\"))\ndata &lt;- getCleanedData() %&gt;%\n  filter(mbon.project == params$project_id)\n\n\n\n\nCode\ndf &lt;- data %&gt;% select(\n  Dataset.title,\n  Technical.POC.email.,\n\n  erddap,\n  erddap_link, \n  \n  obis,\n  obis_link,\n\n  ncei,\n  ncei_link,\n  \n  web,\n  web_link,\n  \n  code,\n  code_link\n)\n\ndf %&gt;% \n  reactable(\n    theme = pff(centered = TRUE),\n    defaultColDef = colDef(footerStyle = list(fontWeight = \"bold\")),\n    columns = list(\n      Dataset.title = colDef(\n        minWidth = 175,\n        footer = 'Total',\n        cell = merge_column(\n          data = .,\n          merged_name = 'Technical.POC.email.',\n          merged_position = 'below',\n          merged_size = 14,\n          size = 16,\n          color = '#333333',\n          spacing = -1\n        )\n      ),\n      Technical.POC.email. = colDef(show = FALSE),\n      erddap = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$erddap_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      erddap_link = colDef(show = FALSE),\n      \n      obis = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$obis_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      obis_link = colDef(show = FALSE),\n      \n      ncei = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$ncei_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      ncei_link = colDef(show = FALSE),\n      \n      web = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$web_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      web_link = colDef(show = FALSE),\n      \n      code = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$code_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      code_link = colDef(show = FALSE)\n    )\n  ) %&gt;% \n  add_title(\n    title = 'Client Order Summary'\n  )\n\n\nClient Order Summary"
  },
  {
    "objectID": "regional_report/regional_reports/Southern California Bight.html",
    "href": "regional_report/regional_reports/Southern California Bight.html",
    "title": "Southern California Bight",
    "section": "",
    "text": "setup\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  # If not installed, install the package\n  install.packages(\"librarian\")\n}\n\nlibrarian::shelf(\n  dplyr,\n  here,\n  htmltools,\n  reactablefmtr,\n  tidyverse\n)\n\n\n\nSouthern California Bight Report\n\n\nload data\nsource(here(\"R/getCleanedData.R\"))\ndata &lt;- getCleanedData() %&gt;%\n  filter(mbon.project == params$project_id)\n\n\n\n\nCode\ndf &lt;- data %&gt;% select(\n  Dataset.title,\n  Technical.POC.email.,\n\n  erddap,\n  erddap_link, \n  \n  obis,\n  obis_link,\n\n  ncei,\n  ncei_link,\n  \n  web,\n  web_link,\n  \n  code,\n  code_link\n)\n\ndf %&gt;% \n  reactable(\n    theme = pff(centered = TRUE),\n    defaultColDef = colDef(footerStyle = list(fontWeight = \"bold\")),\n    columns = list(\n      Dataset.title = colDef(\n        minWidth = 175,\n        footer = 'Total',\n        cell = merge_column(\n          data = .,\n          merged_name = 'Technical.POC.email.',\n          merged_position = 'below',\n          merged_size = 14,\n          size = 16,\n          color = '#333333',\n          spacing = -1\n        )\n      ),\n      Technical.POC.email. = colDef(show = FALSE),\n      erddap = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$erddap_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      erddap_link = colDef(show = FALSE),\n      \n      obis = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$obis_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      obis_link = colDef(show = FALSE),\n      \n      ncei = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$ncei_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      ncei_link = colDef(show = FALSE),\n      \n      web = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$web_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      web_link = colDef(show = FALSE),\n      \n      code = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$code_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      code_link = colDef(show = FALSE)\n    )\n  ) %&gt;% \n  add_title(\n    title = 'Client Order Summary'\n  )\n\n\nClient Order Summary"
  },
  {
    "objectID": "regional_report/regional_reports/All - this is a global dataset.html",
    "href": "regional_report/regional_reports/All - this is a global dataset.html",
    "title": "All - this is a global dataset",
    "section": "",
    "text": "setup\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  # If not installed, install the package\n  install.packages(\"librarian\")\n}\n\nlibrarian::shelf(\n  dplyr,\n  here,\n  htmltools,\n  reactablefmtr,\n  tidyverse\n)\n\n\n\nAll - this is a global dataset Report\n\n\nload data\nsource(here(\"R/getCleanedData.R\"))\ndata &lt;- getCleanedData() %&gt;%\n  filter(mbon.project == params$project_id)\n\n\n\n\nCode\ndf &lt;- data %&gt;% select(\n  Dataset.title,\n  Technical.POC.email.,\n\n  erddap,\n  erddap_link, \n  \n  obis,\n  obis_link,\n\n  ncei,\n  ncei_link,\n  \n  web,\n  web_link,\n  \n  code,\n  code_link\n)\n\ndf %&gt;% \n  reactable(\n    theme = pff(centered = TRUE),\n    defaultColDef = colDef(footerStyle = list(fontWeight = \"bold\")),\n    columns = list(\n      Dataset.title = colDef(\n        minWidth = 175,\n        footer = 'Total',\n        cell = merge_column(\n          data = .,\n          merged_name = 'Technical.POC.email.',\n          merged_position = 'below',\n          merged_size = 14,\n          size = 16,\n          color = '#333333',\n          spacing = -1\n        )\n      ),\n      Technical.POC.email. = colDef(show = FALSE),\n      erddap = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$erddap_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      erddap_link = colDef(show = FALSE),\n      \n      obis = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$obis_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      obis_link = colDef(show = FALSE),\n      \n      ncei = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$ncei_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      ncei_link = colDef(show = FALSE),\n      \n      web = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$web_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      web_link = colDef(show = FALSE),\n      \n      code = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$code_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      code_link = colDef(show = FALSE)\n    )\n  ) %&gt;% \n  add_title(\n    title = 'Client Order Summary'\n  )\n\n\nClient Order Summary"
  },
  {
    "objectID": "regional_report/regional_reports/South Florida.html",
    "href": "regional_report/regional_reports/South Florida.html",
    "title": "South Florida",
    "section": "",
    "text": "setup\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  # If not installed, install the package\n  install.packages(\"librarian\")\n}\n\nlibrarian::shelf(\n  dplyr,\n  here,\n  htmltools,\n  reactablefmtr,\n  tidyverse\n)\n\n\n\nSouth Florida Report\n\n\nload data\nsource(here(\"R/getCleanedData.R\"))\ndata &lt;- getCleanedData() %&gt;%\n  filter(mbon.project == params$project_id)\n\n\n\n\nCode\ndf &lt;- data %&gt;% select(\n  Dataset.title,\n  Technical.POC.email.,\n\n  erddap,\n  erddap_link, \n  \n  obis,\n  obis_link,\n\n  ncei,\n  ncei_link,\n  \n  web,\n  web_link,\n  \n  code,\n  code_link\n)\n\ndf %&gt;% \n  reactable(\n    theme = pff(centered = TRUE),\n    defaultColDef = colDef(footerStyle = list(fontWeight = \"bold\")),\n    columns = list(\n      Dataset.title = colDef(\n        minWidth = 175,\n        footer = 'Total',\n        cell = merge_column(\n          data = .,\n          merged_name = 'Technical.POC.email.',\n          merged_position = 'below',\n          merged_size = 14,\n          size = 16,\n          color = '#333333',\n          spacing = -1\n        )\n      ),\n      Technical.POC.email. = colDef(show = FALSE),\n      erddap = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$erddap_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      erddap_link = colDef(show = FALSE),\n      \n      obis = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$obis_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      obis_link = colDef(show = FALSE),\n      \n      ncei = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$ncei_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      ncei_link = colDef(show = FALSE),\n      \n      web = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$web_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      web_link = colDef(show = FALSE),\n      \n      code = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$code_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      code_link = colDef(show = FALSE)\n    )\n  ) %&gt;% \n  add_title(\n    title = 'Client Order Summary'\n  )\n\n\nClient Order Summary"
  },
  {
    "objectID": "regional_report/regional_reports/Arctic.html",
    "href": "regional_report/regional_reports/Arctic.html",
    "title": "Arctic",
    "section": "",
    "text": "setup\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  # If not installed, install the package\n  install.packages(\"librarian\")\n}\n\nlibrarian::shelf(\n  dplyr,\n  here,\n  htmltools,\n  reactablefmtr,\n  tidyverse\n)\n\n\n\nArctic Report\n\n\nload data\nsource(here(\"R/getCleanedData.R\"))\ndata &lt;- getCleanedData() %&gt;%\n  filter(mbon.project == params$project_id)\n\n\n\n\nCode\ndf &lt;- data %&gt;% select(\n  Dataset.title,\n  Technical.POC.email.,\n\n  erddap,\n  erddap_link, \n  \n  obis,\n  obis_link,\n\n  ncei,\n  ncei_link,\n  \n  web,\n  web_link,\n  \n  code,\n  code_link\n)\n\ndf %&gt;% \n  reactable(\n    theme = pff(centered = TRUE),\n    defaultColDef = colDef(footerStyle = list(fontWeight = \"bold\")),\n    columns = list(\n      Dataset.title = colDef(\n        minWidth = 175,\n        footer = 'Total',\n        cell = merge_column(\n          data = .,\n          merged_name = 'Technical.POC.email.',\n          merged_position = 'below',\n          merged_size = 14,\n          size = 16,\n          color = '#333333',\n          spacing = -1\n        )\n      ),\n      Technical.POC.email. = colDef(show = FALSE),\n      erddap = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$erddap_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      erddap_link = colDef(show = FALSE),\n      \n      obis = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$obis_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      obis_link = colDef(show = FALSE),\n      \n      ncei = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$ncei_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      ncei_link = colDef(show = FALSE),\n      \n      web = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$web_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      web_link = colDef(show = FALSE),\n      \n      code = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$code_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      code_link = colDef(show = FALSE)\n    )\n  ) %&gt;% \n  add_title(\n    title = 'Client Order Summary'\n  )\n\n\nClient Order Summary"
  },
  {
    "objectID": "regional_report/regional_reports.html",
    "href": "regional_report/regional_reports.html",
    "title": "Project Reports",
    "section": "",
    "text": "All - this is a global dataset\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArctic\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCentral California\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCoastal New England\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGLOS MBON\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGulf of Maine\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSE US\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSouth Florida\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSouthern California Bight\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MBON Data Report(s)",
    "section": "",
    "text": "setup\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  # If not installed, install the package\n  install.packages(\"librarian\")\n}\n\nlibrarian::shelf(\n  dplyr,\n  ggplot2,\n  here,\n  networkD3,\n  tm,\n  wordcloud\n)\n\n\n\n\nread in data from csv\nsource(here(\"R/getCleanedData.R\"))\ndata &lt;- getCleanedData()\n\n\n\n\ncreate word cloud from titles & descriptions\ncombined_text &lt;- paste(data$`Dataset.title`, data$`Dataset.summary`, collapse = \" \")\ncorpus &lt;- Corpus(VectorSource(combined_text))\n\n# Clean the text data\ntoSpace &lt;- content_transformer(function(x, pattern) gsub(pattern, \" \", x))\ncorpus &lt;- tm_map(corpus, toSpace, \"/\")\ncorpus &lt;- tm_map(corpus, toSpace, \"@\")\ncorpus &lt;- tm_map(corpus, toSpace, \"\\\\|\")\n\ncorpus &lt;- tm_map(corpus, content_transformer(tolower))\ncorpus &lt;- tm_map(corpus, removePunctuation)\ncorpus &lt;- tm_map(corpus, removeNumbers)\ncorpus &lt;- tm_map(corpus, removeWords, stopwords(\"english\"))\ncorpus &lt;- tm_map(corpus, stripWhitespace)\n\n# Create a Term-Document Matrix\ndtm &lt;- TermDocumentMatrix(corpus)\nmatrix &lt;- as.matrix(dtm)\nword_freqs &lt;- sort(rowSums(matrix), decreasing = TRUE)\ndf &lt;- data.frame(word = names(word_freqs), freq = word_freqs)\n\n# Generate the word cloud\nwordcloud(words = df$word, freq = df$freq, min.freq = 1, \n          max.words = 100, random.order = FALSE, \n          colors = brewer.pal(8, \"Dark2\"))\n\n\n\n\n\n\n\n\n\n\n\ncreate a sankey diagram\nsource(\"R/yes_no_values.R\")  # load consts used below\ndata &lt;- data %&gt;%\n  mutate(\n    RA =     ifelse(tolower(RA)     %in% no_values,   \"\",          RA),\n    erddap = ifelse(tolower(erddap) %in% yes_values,       \"in ERDDAP\", erddap),\n    erddap = ifelse(tolower(erddap) %in% no_values, \"\",          erddap),\n    obis = ifelse(tolower(obis) %in% no_values, \"\", obis),\n    obis = ifelse(tolower(obis) %in% yes_values, \"in OBIS\", obis),\n    ncei = ifelse(tolower(ncei) %in% no_values, \"\", ncei),\n    ncei = ifelse(tolower(ncei) %in% yes_values, \"in NCEI\", ncei)\n  )\n\n# Create links data frames for each column pair and merge them together\nlinks &lt;- rbind(\n  data.frame(\n    source = data$RA,\n    target = data$erddap,\n    value = 1\n  ), \n  data.frame(\n    source = data$RA,\n    target = data$obis,\n    value = 1\n  ),\n  data.frame(\n    source = data$RA,\n    target = data$ncei,\n    value = 1\n  )\n) %&gt;%\n  filter_all(all_vars(. != \"\"))  %&gt;% # drop anything that is empty\n  rbind(\n    data.frame(\n      source = data$mbon.project,\n      target = data$RA,\n      value = 1\n    )\n  )\n# Create nodes data frame\nnodes &lt;- data.frame(\n  name = c(as.character(links$source), as.character(links$target)) %&gt;% unique()\n)\n\n# Reformat the links with IDs\nlinks$IDsource &lt;- match(links$source, nodes$name) - 1\nlinks$IDtarget &lt;- match(links$target, nodes$name) - 1\n\n# Make the Network\np &lt;- networkD3::sankeyNetwork(Links = links, Nodes = nodes,\n                   Source = \"IDsource\", Target = \"IDtarget\",\n                   Value = \"value\", NodeID = \"name\",\n                   sinksRight = FALSE)\np"
  },
  {
    "objectID": "regional_report/regional_reports/Coastal New England.html",
    "href": "regional_report/regional_reports/Coastal New England.html",
    "title": "Coastal New England",
    "section": "",
    "text": "setup\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  # If not installed, install the package\n  install.packages(\"librarian\")\n}\n\nlibrarian::shelf(\n  dplyr,\n  here,\n  htmltools,\n  reactablefmtr,\n  tidyverse\n)\n\n\n\nCoastal New England Report\n\n\nload data\nsource(here(\"R/getCleanedData.R\"))\ndata &lt;- getCleanedData() %&gt;%\n  filter(mbon.project == params$project_id)\n\n\n\n\nCode\ndf &lt;- data %&gt;% select(\n  Dataset.title,\n  Technical.POC.email.,\n\n  erddap,\n  erddap_link, \n  \n  obis,\n  obis_link,\n\n  ncei,\n  ncei_link,\n  \n  web,\n  web_link,\n  \n  code,\n  code_link\n)\n\ndf %&gt;% \n  reactable(\n    theme = pff(centered = TRUE),\n    defaultColDef = colDef(footerStyle = list(fontWeight = \"bold\")),\n    columns = list(\n      Dataset.title = colDef(\n        minWidth = 175,\n        footer = 'Total',\n        cell = merge_column(\n          data = .,\n          merged_name = 'Technical.POC.email.',\n          merged_position = 'below',\n          merged_size = 14,\n          size = 16,\n          color = '#333333',\n          spacing = -1\n        )\n      ),\n      Technical.POC.email. = colDef(show = FALSE),\n      erddap = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$erddap_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      erddap_link = colDef(show = FALSE),\n      \n      obis = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$obis_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      obis_link = colDef(show = FALSE),\n      \n      ncei = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$ncei_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      ncei_link = colDef(show = FALSE),\n      \n      web = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$web_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      web_link = colDef(show = FALSE),\n      \n      code = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$code_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      code_link = colDef(show = FALSE)\n    )\n  ) %&gt;% \n  add_title(\n    title = 'Client Order Summary'\n  )\n\n\nClient Order Summary"
  },
  {
    "objectID": "regional_report/regional_reports/SE US.html",
    "href": "regional_report/regional_reports/SE US.html",
    "title": "SE US",
    "section": "",
    "text": "setup\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  # If not installed, install the package\n  install.packages(\"librarian\")\n}\n\nlibrarian::shelf(\n  dplyr,\n  here,\n  htmltools,\n  reactablefmtr,\n  tidyverse\n)\n\n\n\nSE US Report\n\n\nload data\nsource(here(\"R/getCleanedData.R\"))\ndata &lt;- getCleanedData() %&gt;%\n  filter(mbon.project == params$project_id)\n\n\n\n\nCode\ndf &lt;- data %&gt;% select(\n  Dataset.title,\n  Technical.POC.email.,\n\n  erddap,\n  erddap_link, \n  \n  obis,\n  obis_link,\n\n  ncei,\n  ncei_link,\n  \n  web,\n  web_link,\n  \n  code,\n  code_link\n)\n\ndf %&gt;% \n  reactable(\n    theme = pff(centered = TRUE),\n    defaultColDef = colDef(footerStyle = list(fontWeight = \"bold\")),\n    columns = list(\n      Dataset.title = colDef(\n        minWidth = 175,\n        footer = 'Total',\n        cell = merge_column(\n          data = .,\n          merged_name = 'Technical.POC.email.',\n          merged_position = 'below',\n          merged_size = 14,\n          size = 16,\n          color = '#333333',\n          spacing = -1\n        )\n      ),\n      Technical.POC.email. = colDef(show = FALSE),\n      erddap = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$erddap_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      erddap_link = colDef(show = FALSE),\n      \n      obis = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$obis_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      obis_link = colDef(show = FALSE),\n      \n      ncei = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$ncei_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      ncei_link = colDef(show = FALSE),\n      \n      web = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$web_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      web_link = colDef(show = FALSE),\n      \n      code = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$code_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      code_link = colDef(show = FALSE)\n    )\n  ) %&gt;% \n  add_title(\n    title = 'Client Order Summary'\n  )\n\n\nClient Order Summary"
  },
  {
    "objectID": "regional_report/regional_reports/Gulf of Maine.html",
    "href": "regional_report/regional_reports/Gulf of Maine.html",
    "title": "Gulf of Maine",
    "section": "",
    "text": "setup\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  # If not installed, install the package\n  install.packages(\"librarian\")\n}\n\nlibrarian::shelf(\n  dplyr,\n  here,\n  htmltools,\n  reactablefmtr,\n  tidyverse\n)\n\n\n\nGulf of Maine Report\n\n\nload data\nsource(here(\"R/getCleanedData.R\"))\ndata &lt;- getCleanedData() %&gt;%\n  filter(mbon.project == params$project_id)\n\n\n\n\nCode\ndf &lt;- data %&gt;% select(\n  Dataset.title,\n  Technical.POC.email.,\n\n  erddap,\n  erddap_link, \n  \n  obis,\n  obis_link,\n\n  ncei,\n  ncei_link,\n  \n  web,\n  web_link,\n  \n  code,\n  code_link\n)\n\ndf %&gt;% \n  reactable(\n    theme = pff(centered = TRUE),\n    defaultColDef = colDef(footerStyle = list(fontWeight = \"bold\")),\n    columns = list(\n      Dataset.title = colDef(\n        minWidth = 175,\n        footer = 'Total',\n        cell = merge_column(\n          data = .,\n          merged_name = 'Technical.POC.email.',\n          merged_position = 'below',\n          merged_size = 14,\n          size = 16,\n          color = '#333333',\n          spacing = -1\n        )\n      ),\n      Technical.POC.email. = colDef(show = FALSE),\n      erddap = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$erddap_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      erddap_link = colDef(show = FALSE),\n      \n      obis = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$obis_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      obis_link = colDef(show = FALSE),\n      \n      ncei = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$ncei_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      ncei_link = colDef(show = FALSE),\n      \n      web = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$web_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      web_link = colDef(show = FALSE),\n      \n      code = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$code_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      code_link = colDef(show = FALSE)\n    )\n  ) %&gt;% \n  add_title(\n    title = 'Client Order Summary'\n  )\n\n\nClient Order Summary"
  },
  {
    "objectID": "regional_report/regional_reports/Central California.html",
    "href": "regional_report/regional_reports/Central California.html",
    "title": "Central California",
    "section": "",
    "text": "setup\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  # If not installed, install the package\n  install.packages(\"librarian\")\n}\n\nlibrarian::shelf(\n  dplyr,\n  here,\n  htmltools,\n  reactablefmtr,\n  tidyverse\n)\n\n\n\nCentral California Report\n\n\nload data\nsource(here(\"R/getCleanedData.R\"))\ndata &lt;- getCleanedData() %&gt;%\n  filter(mbon.project == params$project_id)\n\n\n\n\nCode\ndf &lt;- data %&gt;% select(\n  Dataset.title,\n  Technical.POC.email.,\n\n  erddap,\n  erddap_link, \n  \n  obis,\n  obis_link,\n\n  ncei,\n  ncei_link,\n  \n  web,\n  web_link,\n  \n  code,\n  code_link\n)\n\ndf %&gt;% \n  reactable(\n    theme = pff(centered = TRUE),\n    defaultColDef = colDef(footerStyle = list(fontWeight = \"bold\")),\n    columns = list(\n      Dataset.title = colDef(\n        minWidth = 175,\n        footer = 'Total',\n        cell = merge_column(\n          data = .,\n          merged_name = 'Technical.POC.email.',\n          merged_position = 'below',\n          merged_size = 14,\n          size = 16,\n          color = '#333333',\n          spacing = -1\n        )\n      ),\n      Technical.POC.email. = colDef(show = FALSE),\n      erddap = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$erddap_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      erddap_link = colDef(show = FALSE),\n      \n      obis = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$obis_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      obis_link = colDef(show = FALSE),\n      \n      ncei = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$ncei_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      ncei_link = colDef(show = FALSE),\n      \n      web = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$web_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      web_link = colDef(show = FALSE),\n      \n      code = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$code_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      code_link = colDef(show = FALSE)\n    )\n  ) %&gt;% \n  add_title(\n    title = 'Client Order Summary'\n  )\n\n\nClient Order Summary"
  },
  {
    "objectID": "regional_report/regional_reports/GLOS MBON.html",
    "href": "regional_report/regional_reports/GLOS MBON.html",
    "title": "GLOS MBON",
    "section": "",
    "text": "setup\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  # If not installed, install the package\n  install.packages(\"librarian\")\n}\n\nlibrarian::shelf(\n  dplyr,\n  here,\n  htmltools,\n  reactablefmtr,\n  tidyverse\n)\n\n\n\nGLOS MBON Report\n\n\nload data\nsource(here(\"R/getCleanedData.R\"))\ndata &lt;- getCleanedData() %&gt;%\n  filter(mbon.project == params$project_id)\n\n\n\n\nCode\ndf &lt;- data %&gt;% select(\n  Dataset.title,\n  Technical.POC.email.,\n\n  erddap,\n  erddap_link, \n  \n  obis,\n  obis_link,\n\n  ncei,\n  ncei_link,\n  \n  web,\n  web_link,\n  \n  code,\n  code_link\n)\n\ndf %&gt;% \n  reactable(\n    theme = pff(centered = TRUE),\n    defaultColDef = colDef(footerStyle = list(fontWeight = \"bold\")),\n    columns = list(\n      Dataset.title = colDef(\n        minWidth = 175,\n        footer = 'Total',\n        cell = merge_column(\n          data = .,\n          merged_name = 'Technical.POC.email.',\n          merged_position = 'below',\n          merged_size = 14,\n          size = 16,\n          color = '#333333',\n          spacing = -1\n        )\n      ),\n      Technical.POC.email. = colDef(show = FALSE),\n      erddap = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$erddap_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      erddap_link = colDef(show = FALSE),\n      \n      obis = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$obis_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      obis_link = colDef(show = FALSE),\n      \n      ncei = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$ncei_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      ncei_link = colDef(show = FALSE),\n      \n      web = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$web_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      web_link = colDef(show = FALSE),\n      \n      code = colDef(\n        cell = function(value, index) {\n          # Check if the link is NA or NULL\n          url &lt;- df$code_link[index]\n          if (is.na(url) || is.null(url) || trimws(url) == \"\") {\n            return(value)  # Just return the original text if no link is available\n          } else {\n            # Return clickable link if URL is available\n            sprintf('&lt;a href=\"%s\" target=\"_blank\"&gt;%s&lt;/a&gt;', url, value)\n          }\n        },\n        html = TRUE  # Enable HTML rendering in the cell\n      ),\n      code_link = colDef(show = FALSE)\n    )\n  ) %&gt;% \n  add_title(\n    title = 'Client Order Summary'\n  )\n\n\nClient Order Summary"
  }
]